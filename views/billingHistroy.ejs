<!DOCTYPE html>
<html>
<head>
  <title>Billing History</title>
  <style>
    .day-block {
      border: 1px solid #ccc;
      margin: 20px 0;
      padding: 10px;
    }
    .bill-line {
      display: flex;
      justify-content: space-between;
    }
  </style>
</head>
<script>
  const fs = require("fs");
const path = require("path");
const BILL_FILE = path.join(__dirname, "../data/bills.json"); // adjust if needed

function formatDate(dateStr) {
  const d = new Date(dateStr);
  return d.toISOString().split("T")[0];
}

function formatTime(dateStr) {
  const d = new Date(dateStr);
  return d.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" });
}

exports.getBillingHistory = (req, res) => {
  if (!fs.existsSync(BILL_FILE)) return res.render("billing-history", { grouped: {} });

  const raw = fs.readFileSync(BILL_FILE);
  const allBills = JSON.parse(raw);

  const grouped = {};

  allBills.forEach((bill) => {
    const day = formatDate(bill.date);
    const time = formatTime(bill.date);
    if (!grouped[day]) grouped[day] = { bills: [], total: 0 };

    grouped[day].bills.push({ time, final: bill.final });
    grouped[day].total += bill.final;
  });

  res.render("billing-history", { grouped });
};
</script>
<body>
  <h1>ðŸ“œ Billing History</h1>

  <% Object.keys(grouped).reverse().forEach(day => { %>
    <div class="day-block">
      <h2><%= day %></h2>
      <ul>
        <% grouped[day].bills.forEach(b => { %>
          <li class="bill-line">
            <span><%= b.time %></span>
            <span>â‚¹<%= b.final.toFixed(2) %></span>
          </li>
        <% }) %>
      </ul>
      <strong>Total for the day: â‚¹<%= grouped[day].total.toFixed(2) %></strong>
    </div>
  <% }) %>
</body>
</html>
